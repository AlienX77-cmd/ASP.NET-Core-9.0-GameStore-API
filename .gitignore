# .NET Core / .NET specific
*.swp
*.user
*.userosscache
*.sln.docstates
*.suo
*.cache
*.dll
*.exe
*.pdb
*.userprefs
*.dbmdl
*.dbproj.schemaview
*.pfx
*.publishsettings
orleans.codegen.cs

# .NET Build results
[Dd]ebug/
[Dd]ebugPublic/
[Rr]elease/
[Rr]eleases/
x64/
x86/
build/
bld/
[Bb]in/
[Oo]bj/
[Oo]ut/
msbuild.log
msbuild.err
msbuild.wrn

# Visual Studio files
.vs/
.vscode/*
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
*.code-workspace
*_i.c
*_p.c
*_h.h
*.ilk
*.meta
*.obj
*.iobj
*.pch
*.ipdb
*.pgc
*.pgd
*.rsp
*.sbr
*.tlb
*.tli
*.tlh
*.tmp
*.tmp_proj
*_wpftmp.csproj
*.log
*.vspscc
*.vssscc
.builds
*.pidb
*.svclog
*.scc

# NuGet Packages
*.nupkg
# The packages folder can be ignored because of Package Restore
**/[Pp]ackages/*
# except build/, which is used as an MSBuild target.
!**/[Pp]ackages/build/
# NuGet v3's project.json files produces more ignorable files
*.nuget.props
*.nuget.targets

# EF Core Migration Designer files
*.Designer.cs

# SQL Server files
*.mdf
*.ldf
*.ndf

# SQLite databases (optional - you might want to keep these in version control)
# *.db
# *.sqlite
# *.sqlite3

# User-specific files
*.rsuser
*.dtbcache
*.dtbcache.json

# Other
.DS_Store
Thumbs.db
**/node_modules/

# Project specific
# Uncomment if you don't want to include SQLite database in version control
# GameStore.API/GameStore.db
